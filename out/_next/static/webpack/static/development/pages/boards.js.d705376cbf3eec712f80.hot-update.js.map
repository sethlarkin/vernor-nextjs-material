{"version":3,"file":"static/webpack/static/development/pages/boards.js.d705376cbf3eec712f80.hot-update.js","sources":["webpack:///./components/BoardCard.js"],"sourcesContent":["import React from \"react\";\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Close from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\n\n\n// core components\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport imagesStyles from \"assets/jss/nextjs-material-kit/imagesStyles.js\";\nimport barracudaLogo from \"assets/img/board-models/barracudaLogo.png\";\nimport barracudaBoard from \"assets/img/boards/main-barracuda.jpg\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\n\nimport { cardTitle } from \"assets/jss/nextjs-material-kit.js\";\n\nconst styles = {\n  ...imagesStyles,\n  cardTitle,\n};\n\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(styles);\n\nexport default function BoardCard(props) {\n  const classes = useStyles();\n  const [classicModal, setClassicModal] = React.useState(false);\n\n  return (\n    <div style={{padding: \"10px\"}}>\n      <Card style={{ width: \"20em\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n        <img\n          style={{ height: \"40%\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}\n          src={props.image}\n          alt=\"BarracBoard Imageuda\"\n        />\n        <img\n          style={{ height: \"30%\", width: \"34%\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"6px\" }}\n          src={props.logo}\n          alt=\"Board Logo\"\n        />\n        <CardBody>\n\n          <h4 className={classes.cardTitle}>{props.name}</h4>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={6} lg={4}>\n              <Button\n                color=\"primary\"\n                block\n                onClick={() => setClassicModal(true)}\n              >\n                MORE\n                </Button>\n              <Dialog\n                classes={{\n                  root: classes.center,\n                  paper: classes.modal\n                }}\n                open={classicModal}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={() => setClassicModal(false)}\n                aria-labelledby=\"classic-modal-slide-title\"\n                aria-describedby=\"classic-modal-slide-description\"\n              >\n                <DialogTitle\n                  id=\"classic-modal-slide-title\"\n                  disableTypography\n                  className={classes.modalHeader}\n                >\n                  {/* <IconButton\n                    className={classes.modalCloseButton}\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    onClick={() => setClassicModal(false)}\n                  >\n                    <Close className={classes.modalClose} />\n                  </IconButton> */}\n                  <div style={{ display: \"flex\" }}>\n                    <img\n                      style={{ flex: \"5%\", padding: \"6px\"}}\n                      src={props.image}\n                      alt=\"Board Image\"\n                    />\n                    <img\n                      style={{ width: \"10%\", padding: \"6px\", display: \"block\", marginRight: \"auto\", marginTop: \"6px\" }}\n                      src={props.logo}\n                      alt=\"Board Logo\"\n                    />\n                  </div>\n\n\n                  <h4 className={classes.modalTitle}><strong>{props.name}</strong></h4>\n                </DialogTitle>\n                <DialogContent\n                  id=\"classic-modal-slide-description\"\n                  className={classes.modalBody}\n                >\n                  <p>{props.description}</p>\n                </DialogContent>\n                <DialogActions className={classes.modalFooter}>\n                  <Button\n                    onClick={() => setClassicModal(false)}\n                    color=\"danger\"\n                    simple\n                  >\n                    Close\n                    </Button>\n                </DialogActions>\n              </Dialog>\n            </GridItem>\n          </GridContainer>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\n\nexport async function getStaticProps(context) {\n\n  return {\n    props: {\n      props\n    },\n  }\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AADA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}