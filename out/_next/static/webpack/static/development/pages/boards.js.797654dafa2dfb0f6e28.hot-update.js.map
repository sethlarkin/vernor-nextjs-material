{"version":3,"file":"static/webpack/static/development/pages/boards.js.797654dafa2dfb0f6e28.hot-update.js","sources":["webpack:///./components/BoardCard.js"],"sourcesContent":["import React from \"react\";\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\n\n\n// core components\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport imagesStyles from \"assets/jss/nextjs-material-kit/imagesStyles.js\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\n\nimport { cardTitle } from \"assets/jss/nextjs-material-kit.js\";\n\nconst styles = {\n  ...imagesStyles,\n  cardTitle,\n};\n\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(styles);\n\nexport default function BoardCard(props) {\n  const classes = useStyles();\n  const [classicModal, setClassicModal] = React.useState(false);\n\n  return (\n    <div style={{ padding: \"10px\" }}>\n      <GridItem xs={12} sm={12} md={6} lg={4}>\n\n        <Card style={{ width: \"20em\", marginLeft: \"auto\", marginRight: \"auto\", minHeight: \"510px\" }}>\n          <img\n            style={{ height: \"40%\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}\n            src={props.image}\n            alt=\"BarracBoard Imageuda\"\n          />\n          <img\n            style={{ height: \"100px\", maxWidth: \"20em\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"20px\", marginBottom:\"auto\" }}\n            src={props.logo}\n            alt=\"Board Logo\"\n          />\n          <CardBody>\n            <div style={{position:\"absolute\", bottom:0, left: 40, right: 40}}>\n              <h4 className={classes.cardTitle} style={{textAlign:\"center\"}}>{props.name}</h4>\n              <Button\n                color=\"primary\"\n                simple\n                block\n                onClick={() => setClassicModal(true)}\n              >\n                MORE\n                </Button>\n            </div>\n            <Dialog\n              classes={{\n                root: classes.center,\n                paper: classes.modal\n              }}\n              style={{ minHeight: \"590px\" }}\n              open={classicModal}\n              TransitionComponent={Transition}\n              keepMounted\n              onClose={() => setClassicModal(false)}\n              aria-labelledby=\"classic-modal-slide-title\"\n              aria-describedby=\"classic-modal-slide-description\"\n            >\n              <DialogTitle\n                id=\"classic-modal-slide-title\"\n                disableTypography\n                className={classes.modalHeader}\n              >\n                {/* <div style={{ display: \"flex\" }}> */}\n                <div>\n                  <img\n                    style={{ padding: \"6px\", marginTop: \"10px\" }}\n                    src={props.image}\n                    alt=\"Board Image\"\n                  />\n                  <img\n                    style={{width: \"30%\", flex: 1, padding: \"6px\", display: \"block\", marginLeft: \"20px\", marginTop: \"10px\" }}\n                    src={props.logo}\n                    alt=\"Board Logo\"\n                  />\n                </div>\n\n\n                <h4 className={classes.modalTitle} ><strong>{props.name}</strong></h4>\n              </DialogTitle>\n              <DialogContent\n                id=\"classic-modal-slide-description\"\n                className={classes.modalBody}\n              >\n                <p><strong>{props.description}</strong></p>\n                <h6>Size Range: {props.dims.range}</h6>\n                <h6>Nose: {props.dims.Nose}</h6>\n                <h6>Middle: {props.dims.Middle}</h6>\n                <h6>Tail: {props.dims.Tail}</h6>\n                <h6>Thickness: {props.dims.Thickness}</h6>\n                <h6>Volume: {props.dims.Volume}</h6>\n              </DialogContent>\n              <DialogActions className={classes.modalFooter}>\n                <Button\n                  onClick={() => setClassicModal(false)}\n                  color=\"danger\"\n                  simple\n                >\n                  Close\n                    </Button>\n              </DialogActions>\n            </Dialog>\n          </CardBody>\n        </Card>\n      </GridItem>\n\n    </div>\n  );\n}\n\n\nexport async function getStaticProps(context) {\n\n  return {\n    props: {\n      props\n    },\n  }\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AADA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}