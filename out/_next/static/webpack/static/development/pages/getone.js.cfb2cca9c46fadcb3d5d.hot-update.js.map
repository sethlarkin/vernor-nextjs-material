{"version":3,"file":"static/webpack/static/development/pages/getone.js.cfb2cca9c46fadcb3d5d.hot-update.js","sources":["webpack:///./pages/getone.js"],"sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\n\nimport ShopCard from \"components/ShopCard\"\n\nimport { getBoardData } from '../lib/board-data'\n\nimport profilePageStyles from \"assets/jss/nextjs-material-kit/pages/profilePage.js\";\nimport { cardTitle } from \"assets/jss/nextjs-material-kit.js\";\n\nimport shopData from \"../lib/shops.json\"\nimport shopDataBAK from \"../lib/shopsBAK.json\"\n\nconst styles = {\n  ...profilePageStyles,\n  cardTitle,\n}\n\nconst useStyles = makeStyles(styles);\n\nexport default function ProfilePage({ props, allBoardsData }) {\n  const classes = useStyles();\n  const { ...rest } = props;\n  const imageClasses = classNames(\n    classes.imgRaised,\n    classes.imgRoundedCircle,\n    classes.imgFluid\n  );\n  const navImageClasses = classNames(classes.imgRounded, classes.imgGallery);\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        brand=\"NextJS Material Kit\"\n        rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 200,\n          color: \"white\"\n        }}\n        {...rest}\n      />\n      <Parallax small filter image={require(\"assets/img/profile-bg.jpg\")} />\n\n      <div className={classNames(classes.main)}>\n        <div>\n          <div className={classes.container}>\n            \n            {shopDataBAK.shops.map(shop => (\n\n              <GridContainer\n                container\n                direction=\"row\"\n                justify=\"left\"\n                alignItems=\"center\"\n              >\n              <h3>{shop.state}</h3>\n              <br/>\n\n                {shop.locations.map(info => (\n\n                  <ShopCard\n                    item\n                    name={info.name}\n                    address={info.address}\n                    phone={info.phone}\n                    site={info.site}\n                  />\n                ))}\n              </GridContainer>\n          ))}\n\n\n            <h3>California</h3>\n\n            <GridContainer\n              container\n              direction=\"row\"\n              justify=\"left\"\n              alignItems=\"center\"\n            >\n              {shopData.shops.california.map(shop => (\n\n                <ShopCard\n                  item\n                  name={shop.name}\n                  address={shop.address}\n                  phone={shop.phone}\n                  site={shop.site}\n                />\n              ))}\n            </GridContainer>\n\n            <h3>Maryland</h3>\n            <GridContainer\n              container\n              direction=\"row\"\n              justify=\"left\"\n              alignItems=\"center\"\n            >\n              {shopData.shops.maryland.map(shop => (\n                <ShopCard\n                  name={shop.name}\n                  address={shop.address}\n                  phone={shop.phone}\n                  site={shop.site}\n                />\n              ))}\n            </GridContainer>\n\n            <h3>North Carolina</h3>\n            <GridContainer\n              container\n              direction=\"row\"\n              justify=\"left\"\n              alignItems=\"center\"\n            >\n              {shopData.shops.north_carolina.map(shop => (\n                <ShopCard\n                  name={shop.name}\n                  address={shop.address}\n                  phone={shop.phone}\n                  site={shop.site}\n                />\n              ))}\n            </GridContainer>\n\n            <h3>South Carolina</h3>\n            <GridContainer\n              container\n              direction=\"row\"\n              justify=\"left\"\n              alignItems=\"center\"\n            >\n              {shopData.shops.south_carolina.map(shop => (\n                <ShopCard\n                  name={shop.name}\n                  address={shop.address}\n                  phone={shop.phone}\n                  site={shop.site}\n                />\n              ))}\n            </GridContainer>\n\n            <h3>Texas</h3>\n            <GridContainer\n              container\n              direction=\"row\"\n              justify=\"left\"\n              alignItems=\"center\"\n            >\n              {shopData.shops.texas.map(shop => (\n                <ShopCard\n                  name={shop.name}\n                  address={shop.address}\n                  phone={shop.phone}\n                  site={shop.site}\n                />\n              ))}\n            </GridContainer>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div >\n  );\n}\n\nexport async function getStaticProps() {\n  const allBoardsData = getBoardData()\n  return {\n    props: {\n      allBoardsData\n    }\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAIA;;AAEA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAFA;AACA;AAEA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAXA;AAysourceRoot":""}